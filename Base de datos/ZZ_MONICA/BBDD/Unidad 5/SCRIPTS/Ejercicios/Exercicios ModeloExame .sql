
											------------------------ EJERCICIOS MODELO  EXAMEN 2ª EVALUACION ------------------------ 

-- EJERCICIO 1 => Consulta con 4 columnas: el número identificador, el nombre completo (apellido 1 apellido2, nombre), los días que lleva contratado en la empresa y la cuota de ventas, 
-- de cada uno de los empleados que están asignados a algún cliente. Si algún vendedor no tiene cuota asignada deberá aparecer un 0 en su lugar. En el resultado deben aparecer primero los empleados
-- que lleven menos días contratados.

USE EMPRESA_MarcosChouza;

	SELECT numero, 
			ape1 + ' ' + ISNULL(ape2, ' ')+ ' ' + nome AS nome_completo, 
			DATEDIFF(DAY, data_contrato, GETDATE()) AS dias_contratado,
			ISNULL(cota_de_vendas, 0)

	FROM EMPREGADO

	WHERE numero in (SELECT num_empregado_asignado
					FROM CLIENTE)

	ORDER BY dias_contratado;



-- EJERCICIO 2 => Consulta que devuelva la lista de los pedidos que hace más de 50 meses y menos de 60 meses que se han realizado. En el resultado deberá aparecer el número del pedido y en una segunda columna la fecha
-- del pedido con formato dd-mm-aaaa (Fíjate que se separan con guiones y llámale FechaPared). Deben aparecer los pedidos más recientes primero. Asegúrate que aparecen bien ordenados.

USE EMPRESA_MarcosChouza;

	SELECT numero, CONVERT(CHAR(10), data_pedido, 105) as Fecha_Pedido
	FROM PEDIDO 
	WHERE DATEDIFF(month, data_pedido, getdate()) BETWEEN 105 AND 115
	ORDER BY data_pedido DESC;


-- EJERCICIO 3 => Utiliza una consulta compuesta para obtener el código de los productos de los que no se han hecho pedidos. En el resultado deben aparecer el identificador del fabricante y el del producto en una
-- única columna de nombre PRODUCTOS SIN PEDIDO, por ejemplo, aparecerá ASU4AK47A. El resultado deberá aparecer ordenado alfabéticamente. 
-- IMPORTANTE: El nombre de la columna debe ser exactamente el que se indica, incluídos los espacios en blanco.




-- EJERCICIO 4 => Consulta que devuelva el nombre de cada uno de los empleados de la BD, su fecha de contrato con formato dd/mm/aaaa y en otra tercera columna el importe medio de los pedidos del empleado (o llamado
-- también vendedor).
-- Si existiese algún vendedor (empleado) que no ha vendido nada, en la columna del importe medio deberá aparecer la frase 'ESTE EMPLEADO NO TIENE PEDIDOS'.
-- Solo se mostrarán los empleados cuyo pedido más caro no supere los 20000€ de importe y que además, hayan sido contratados un dia 1, 6 ó 26 de cualquier mes y de cualquier año.
-- En la coluimna del importe se deberán mostrar los importes con 8 dígitos como máximo en la parte entera y 2 decimales.
-- Deberán aparecer primero en el resultado los empleados con mayor importe medio. En caso de que hubiese varios empleados con el mismo importe medio, deberán aparecer primero los que tienen mayor antigüedad
--en la empresa. Asegúrate que aparecen bien ordenados.

USE EMPRESA_MarcosChouza;

	SELECT 
	FROM 


-- EJERCICIO 5 => Consulta que devuelva el 50% de los socios cuyo nombre de pila tiene por segunda letra una A y que pagan cuotas cuyo importe sea mayor o igual que 29 y menor o igual que 100. La consulta mostrará
-- en 5 columnas el número de socio, el nombre de pila, el primer apellido, el número de caracteres del primer apellido, el nombre del mes en que nació y el importe de la cuota que paga. El nombre del mes en que nació+
-- y el importe de la cuota aparecerán en una única columna separados por un guión (-). Esta columna se llamará Mes-Nac-Cuota (con un guión en el medio).
-- El resultado deberá aparecer ordenado por mes de nacimiento, es decir, los de enero aparecerán antes que los de febrero, los de febrero antes que los de marzo, y así sucesivamente.
-- IMPORTANTE:
	-- Para resolver la búsqueda de la letra A en la segunda posición del nombre, deberás emplear una función integrada en el gestor. No puedes usar el predicado LIKE.
	-- Para hacer la comprobación del importe de las cuotas que paga cada socio no puedes isar ni la cláusula In, ni OR ni tampoco los operadores >=, >, <=, !=, =<>.